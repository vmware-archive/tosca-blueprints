tosca_definitions_version: cloudify_dsl_1_0

imports:

    - http://www.getcloudify.org/spec/cloudify/3.2/types.yaml
    - https://raw.githubusercontent.com/cloudify-cosmo/tosca-vcloud-plugin/1.2/plugin.yaml
    - http://www.getcloudify.org/spec/fabric-plugin/1.2/plugin.yaml

inputs:

  catalog:
    type: string
  template:
    type: string
  network_name:
    type: string
  gateway_name:
    type: string
  public_ip:
    type: string
  server_name:
    type: string
  ssh_user:
    type: string
  ssh_public_key:
    type: string
  ssh_private_key_path:
    type: string
 
  vcloud_username:
    type: string
  vcloud_password:
    type: string
  vcloud_url:
    type: string
    default: 'iam.vchs.vmware.com'
  vcloud_service:
    type: string
    default: ''
  vcloud_service_type:
    default: 'ondemand'
  vcloud_api_version:
    type: string
    default: '5.7'
  vcloud_vdc:
    type: string
  vcloud_instance:
    type: string

node_types:

    vcloud_configuration:
        derived_from: cloudify.nodes.Root
        properties:
            vcloud_config: {}

node_templates:

    vcloud_configuration:
        type: vcloud_configuration
        properties:
            vcloud_config:
                username: { get_input: vcloud_username }
                password: { get_input: vcloud_password }
                url: { get_input: vcloud_url }
                instance: { get_input: vcloud_instance }
                vdc: { get_input: vcloud_vdc }
                org: { get_input: vcloud_vdc }
                service_type: { get_input: vcloud_service_type }
                service: { get_input: vcloud_service }
                api_version: { get_input: vcloud_api_version }

    ssh_keypair:
      type: cloudify.vcloud.nodes.KeyPair
      properties:
        private_key_path: { get_input: ssh_private_key_path }
        public_key:
          key: { get_input: ssh_public_key }
          user: { get_input: ssh_user }

    example_server:
        type: cloudify.vcloud.nodes.Server
        properties:
            server:
                name: { get_input: server_name }
                catalog: { get_input: catalog }
                template: { get_input: template }
                hardware:
                    cpu: 3
                    memory: 2048
                guest_customization:
                    computer_name: { get_input: server_name }
                    public_keys:
                        - { get_property: [ssh_keypair, public_key] }
            install_agent: false
            management_network: { get_input: network_name }
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }
        relationships:
            - target: example_port
              type: cloudify.vcloud.server_connected_to_port
            - target: example_public_ip
              type: cloudify.vcloud.server_connected_to_public_nat

    example_port:
        type: cloudify.vcloud.nodes.Port
        properties:
            port:
                network: { get_input: network_name }
                ip_allocation_mode: pool
                primary_interface: true

    example_public_ip:
        type: cloudify.vcloud.nodes.PublicNAT
        properties:
            nat:
                edge_gateway: { get_input: gateway_name }
                public_ip: { get_input: public_ip }
            rules:
                - type: SNAT
                - type: DNAT
                  protocol: tcp
                  original_port: 22
                  translated_port: 22
                - type: DNAT
                  protocol: tcp
                  original_port: 80
                  translated_port: 80

    nginx_service:
        type: cloudify.nodes.ApplicationServer
        interfaces:
            cloudify.interfaces.lifecycle:
                start:
                    implementation: fabric.fabric_plugin.tasks.run_commands
                    inputs:
                      commands:
                        - sudo apt-get update
                        - sudo apt-get install -y nginx
                        - sudo service nginx start
                      fabric_env:
                        host_string: { get_input: public_ip }
                        host: { get_input: public_ip }
                        user: { get_property: [ssh_keypair, public_key, user] }
                        key_filename: { get_property: [ssh_keypair, private_key_path] }
                        disable_known_hosts: True
        relationships:
          - type: cloudify.relationships.contained_in
            target: example_server

